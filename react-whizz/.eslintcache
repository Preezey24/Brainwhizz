[{"/home/rhys/Brainwhizz/react-whizz/src/index.js":"1","/home/rhys/Brainwhizz/react-whizz/src/App.js":"2","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginForm.js":"3","/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpForm.js":"4","/home/rhys/Brainwhizz/react-whizz/src/store/index.js":"5","/home/rhys/Brainwhizz/react-whizz/src/store/reducers/session.js":"6","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LogoutButton.js":"7","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/MathGame.js":"8","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/math_tables.js":"9","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/clock_helper.js":"10","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/MemoryGame.js":"11","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Clock.js":"12","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Modal.js":"13","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Modal.js":"14","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Clock.js":"15","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Light.js":"16","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Main.js":"17","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/memory.js":"18","/home/rhys/Brainwhizz/react-whizz/src/components/splash/SplashAuth.js":"19","/home/rhys/Brainwhizz/react-whizz/src/components/navigation/NavBar.js":"20","/home/rhys/Brainwhizz/react-whizz/src/components/navigation/ProfileButton.js":"21","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginFormModal.js":"22","/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpModal.js":"23","/home/rhys/Brainwhizz/react-whizz/src/components/drawing/Drawing.js":"24","/home/rhys/Brainwhizz/react-whizz/src/components/auth/ModalLog.js":"25","/home/rhys/Brainwhizz/react-whizz/src/components/auth/ModalSign.js":"26"},{"size":478,"mtime":1610416226499,"results":"27","hashOfConfig":"28"},{"size":1802,"mtime":1611010100850,"results":"29","hashOfConfig":"28"},{"size":2802,"mtime":1610826445546,"results":"30","hashOfConfig":"28"},{"size":3476,"mtime":1610807395826,"results":"31","hashOfConfig":"28"},{"size":848,"mtime":1610994747060,"results":"32","hashOfConfig":"28"},{"size":3298,"mtime":1610995453740,"results":"33","hashOfConfig":"28"},{"size":724,"mtime":1610821585556,"results":"34","hashOfConfig":"28"},{"size":8408,"mtime":1611022158910,"results":"35","hashOfConfig":"28"},{"size":2074,"mtime":1610128491513,"results":"36","hashOfConfig":"28"},{"size":217,"mtime":1610643915137,"results":"37","hashOfConfig":"28"},{"size":10359,"mtime":1611022130730,"results":"38","hashOfConfig":"28"},{"size":3034,"mtime":1610649520747,"results":"39","hashOfConfig":"28"},{"size":791,"mtime":1611022574350,"results":"40","hashOfConfig":"28"},{"size":788,"mtime":1611022558190,"results":"41","hashOfConfig":"28"},{"size":479,"mtime":1610935792366,"results":"42","hashOfConfig":"28"},{"size":223,"mtime":1610236844543,"results":"43","hashOfConfig":"28"},{"size":916,"mtime":1610935451536,"results":"44","hashOfConfig":"28"},{"size":253,"mtime":1610236844543,"results":"45","hashOfConfig":"28"},{"size":2477,"mtime":1610997518550,"results":"46","hashOfConfig":"28"},{"size":1556,"mtime":1610998087580,"results":"47","hashOfConfig":"28"},{"size":1233,"mtime":1610824602956,"results":"48","hashOfConfig":"28"},{"size":890,"mtime":1610772529150,"results":"49","hashOfConfig":"28"},{"size":891,"mtime":1610772651980,"results":"50","hashOfConfig":"28"},{"size":4654,"mtime":1611008979930,"results":"51","hashOfConfig":"28"},{"size":1232,"mtime":1610823726666,"results":"52","hashOfConfig":"28"},{"size":765,"mtime":1610773298120,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"ilkr6e",{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},"/home/rhys/Brainwhizz/react-whizz/src/index.js",[],["114","115"],"/home/rhys/Brainwhizz/react-whizz/src/App.js",["116","117","118","119","120"],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginForm.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpForm.js",[],"/home/rhys/Brainwhizz/react-whizz/src/store/index.js",[],"/home/rhys/Brainwhizz/react-whizz/src/store/reducers/session.js",["121"],"const SET_USER = 'session/setUser'; \nconst REMOVE_USER = 'session/removeUser'; \nconst SET_ERRORS = 'session/setErrors';\nconst REMOVE_ERRORS = 'session/removeErrors'; \n\nexport const setUser = (user) => {\n    return {\n        type: SET_USER, \n        payload: user, \n    };\n}; \n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER, \n    };\n};\n\nconst setErrors = ({errors}) => {\n    return {\n        type: SET_ERRORS, \n        payload: errors, \n    }\n}\n\nexport const removeErrors = () => {\n    return {\n        type: REMOVE_ERRORS,\n    }\n}\n\nexport const signUp = (user) => async (dispatch) => {\n    const { username, email, password, confirm } = user; \n    try {\n        const response = await fetch('/auth/signup', {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                email,\n                password,\n                confirm,\n                math_high: null, \n                math_total: null, \n                memory_high: null,\n                memory_total: null, \n                total_score: null,\n            }),\n        }); \n        if (response.ok) {\n            const data = await response.json();\n            dispatch(setUser(data)); \n        } else {\n            const errors = await response.json(); \n            dispatch(setErrors(errors));\n        }\n    } catch (err) {\n        console.log(err.message);\n    }  \n}; \n\nexport const logIn = (user) => async (dispatch) => {\n    const { email, password } = user;\n    try { \n        const response = await fetch('/auth/login', {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password,\n            }),\n        });\n        if (response.ok) {  \n            const data = await response.json(); \n            dispatch(setUser(data)); \n        } else {\n            const errors = await response.json();  \n            dispatch(setErrors(errors));\n        }\n    } catch (err) { \n        console.log(err); \n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    try {\n        const response = await fetch('/auth/logout')\n        if (response.ok) {\n            dispatch(removeUser()); \n        }\n    } catch (err) {\n        console.log(err); \n    }\n}\n\nconst initialState = { user: null, errors: null }; \n\nconst sessionReducer = (state = initialState, action) => {\n    let newState; \n    switch (action.type) {\n        case SET_USER: \n            //create a copy, do not mutate existing to avoid race conditions \n            newState = Object.assign({}, state);\n            newState.errors = null;  \n            newState.user = action.payload; \n            return newState; \n        case REMOVE_USER: \n            newState = Object.assign({}, state); \n            newState.user = null; \n            return newState; \n        case SET_ERRORS: \n            newState = state; \n            newState.errors = action.payload;\n            return newState;\n        case REMOVE_ERRORS: \n            newState = state; \n            newState.errors = action.payload;  \n        default: \n            return state; \n    }\n};\n\nexport default sessionReducer; ","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LogoutButton.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/math/MathGame.js",["122","123","124","125","126"],"/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/math_tables.js",["127"],"function getRandInt (max) {\n    return Math.floor(Math.random() * max); \n}\n\nfunction mathOp (operation) {\n    let nums; \n    let num1 = 2; \n    let num2 = 3; \n    switch (operation) {\n        case '+':\n            nums = [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17,\n                18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\n                33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, \n                48, 49, 50]\n            num1 = nums[getRandInt(49)];\n            num2 = nums[getRandInt(49)];\n            return `${num1} + ${num2}`; \n        case '-': \n            while (num1 < num2) {\n                nums = [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17,\n                    18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\n                    33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, \n                    48, 49, 50] \n                num1 = nums[getRandInt(49)]; \n                num2 = nums[getRandInt(49)]; \n            }\n            return `${num1} - ${num2}`; \n        case '/': \n            while (num1 % num2 !== 0) {\n                let nums = [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17,\n                            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\n                            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, \n                            48, 49, 50]\n                num1 = nums[getRandInt(49)];\n                num2 = nums[getRandInt(49)];\n            } \n            return `${num1} / ${num2}`; \n        case '*': \n            nums = [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12];  \n            num1 = nums[getRandInt(12)];\n            num2 = nums[getRandInt(12)];\n            return `${num1} * ${num2}`; \n    }\n};\n\nfunction mathProblems () {\n    const ops = ['+', '-', '/', '*']; \n    let qArr = []; \n    for (let i = 0; i < 10; i++) {\n        //establish operation to be used at random\n        const op = ops[getRandInt(4)];\n        qArr.push(mathOp(op)) \n    }\n    return qArr; \n}\n\nexport default mathProblems; ","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/clock_helper.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/MemoryGame.js",["128","129"],"/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Clock.js",["130"],"import React, { useEffect, useRef } from 'react'; \nimport { timeConversion } from '../../component_utils/clock_helper'; \nimport './Clock.css'; \n\nconst WARNING_THRESHOLD = 30; \nconst ALERT_THRESHOLD = 10; \nconst COLOR_CODES = {\n    info: {\n        color: \"green\"\n    },\n    warning: {\n        color: \"orange\",\n        threshold: WARNING_THRESHOLD\n    }, \n    alert: {\n        color: \"red\",\n        threshold: ALERT_THRESHOLD\n    }\n}; \n\nlet remainingPathColor = COLOR_CODES.info.color\n\nconst Clock = ({time, setTime, counter, setCounter}) => {   \n    const timeLimit = useRef(time); \n\n    function timeRemaining() {\n        const timeLeft = counter/timeLimit.current;\n        return (timeLeft - (1 / timeLimit.current) * (1 - timeLeft));\n    };\n    \n    function setCircleDasharray() {\n        const circleDasharray = `${(\n            timeRemaining() * '283'\n        ).toFixed(0)} 283`;\n        document.getElementById('base-timer-path-remaining')\n                .setAttribute('stroke-dasharray', circleDasharray)\n    };\n\n    function setPathColor(timeLeft) {\n        const {alert, warning} = COLOR_CODES; \n\n        if (timeLeft <= alert.threshold) {\n            remainingPathColor = \"red\";\n        } else if (timeLeft <= warning.threshold) {\n            remainingPathColor = \"orange\"; \n        } else {\n            remainingPathColor = 'green'; \n        }\n    };\n\n    function shake(timeLeft) {\n        const circle = document.querySelector('.base-timer__circle'); \n        if (timeLeft <= 10) {\n            circle.style.animation = \"shake 0.5s cubic-bezier(0.42, 0.0, 0.58, 1.0) both\"; \n            setTimeout(() => {\n                circle.removeAttribute(\"style\"); \n            }, 500);  \n        }\n    }\n    \n    useEffect(() => {\n        const timer = counter > 0 && setInterval(() => {\n            setCounter(counter - 1);   \n        }, 1000);\n        setCircleDasharray();\n        setPathColor(counter);   \n        setTime(counter);\n        shake(counter); \n        return () => clearInterval(timer); \n    }, [counter]); \n\n    return (\n       <div className={\"base-timer\"}>\n           <svg className={\"base-timer__svg\"} viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n               <g className={\"base-timer__circle\"}>\n                   <circle className={\"base-timer__path-elapsed\"} cx=\"50\" cy=\"50\" r=\"45\" />\n                   <path \n                        id=\"base-timer-path-remaining\"\n                        strokeDasharray=\"283\"\n                        className={'base-timer__path-remaining'}\n                        style={{stroke: `${remainingPathColor}`}}\n                        d=\"\n                            M 50, 50\n                            m -45, 0\n                            a 45,45 0 1,0 90,0\n                            a 45,45 0 1,0 -90,0\n                            \"\n                    ></path>\n               </g>\n           </svg>\n           <span className={\"base-timer__label\"}>\n               {timeConversion(time)}\n           </span>\n       </div> \n    )\n}\n\nexport default Clock; ","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Modal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Modal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Clock.js",["131"],"import React, { useEffect } from 'react'; \nimport { timeConversion } from '../../component_utils/clock_helper'; \n\nconst Clock = ({setTime, counter, setCounter}) => {   \n    useEffect(() => {\n        const timer = counter > 0 && setInterval(() => {\n            setCounter(counter - 1);  \n        }, 1000);\n        setTime(timeConversion(counter)); \n        return () => clearInterval(timer); \n    }, [counter]); \n\n    return (\n       <>\n       </> \n    )\n}\n\nexport default Clock; ","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Light.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Main.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/memory.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/splash/SplashAuth.js",["132"],"import React from 'react'; \nimport { useSelector } from 'react-redux'; \nimport { NavLink } from 'react-router-dom';\nimport './SplashAuth.css';\nimport { FaDivide, FaEye } from \"react-icons/fa\";\nimport { FcCalculator, FcIdea, FcPicture, FcClock, FcMindMap, FcFrame } from \"react-icons/fc\";\n\n\nconst SplashAuth = () => {\n    const user = useSelector(state => state.session.user);  \n\n    let drawing; \n    if (user) {\n        if (user.image_url) {\n            drawing = (\n                <>\n                    <img src={user.image_url}/>\n                </>\n            )\n        } else {\n            drawing = (\n                <p>\n                    Open up your creative side, \n                    draw yourself! \n                </p>\n            )\n        }\n    };\n\n    return (\n        <div className={\"page__main\"}> \n            <i class=\"fab fa-accessible-icon\"></i>\n            <div className={\"math__div\"}>\n                <NavLink to='/math'>\n                    <span className={\"math__link-span\"}>\n                        <div className={\"math__heading\"}>\n                            Math Game\n                        </div>\n                    </span>\n                </NavLink>\n                <FcCalculator className={\"math__calculator\"}/>\n                <FaDivide className={\"math__divide\"}/>\n                <FcClock className={\"math__equals\"}/>\n            </div>\n            <div className={\"memory__div\"}>\n                <NavLink to='/memory'>\n                    <span className={\"memory__link-span\"}>\n                        <div className={\"memory__heading_one\"}>\n                            Memory\n                        </div>\n                        <div className={\"memory__heading_two\"}>\n                            Game\n                        </div>\n                    </span>\n                </NavLink> \n                <FaEye className={\"memory__eye\"}/>\n                <FcIdea className={\"memory__light\"}/>\n                <FcMindMap className={\"memory__mind\"}/>\n            </div>\n            <div className={\"drawing__div\"}>\n                <NavLink to='/drawing'>\n                    <span className={\"drawing__link-span\"}>Drawing</span>\n                </NavLink> \n                <FcPicture className={\"drawing__pic\"}/>\n                <FcFrame className={\"drawing__gallery\"}/>\n            </div>\n            <div className={\"picture__div\"}>\n                {drawing}\n            </div>\n        </div>\n    )\n}\n\nexport default SplashAuth; ","/home/rhys/Brainwhizz/react-whizz/src/components/navigation/NavBar.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/navigation/ProfileButton.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginFormModal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpModal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/drawing/Drawing.js",["133","134"],"import React, {useRef, useEffect, useState} from 'react'; \nimport { useSelector, useDispatch } from 'react-redux'; \nimport {useHistory} from 'react-router-dom'; \nimport './Drawing.css';\nimport { setUser } from '../../store/reducers/session';\nimport board from '../../images/draw_board.png'; \n\nconst Drawing = () => {\n    const user = useSelector(state => state.session.user);\n    const dispatch = useDispatch(); \n    const history = useHistory(); \n    const canvasRef = useRef(null); \n    //this is set to persist data through re-renders \n    const contextRef = useRef(null); \n    //remember that the button is pressed \n    const [isDrawing, setIsDrawing] = useState(false);\n    //saving the canvas image \n    const [image, setImage] = useState({})\n\n    //access canvas API when component mounts\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        //support higher resolution computers \n        canvas.width = 500;\n        canvas.height = 500;\n        //define 2D api for canvas to draw on\n        const context = canvas.getContext(\"2d\");\n        context.lineCap = \"round\";\n        context.strokeStyle = \"black\";\n        context.lineWidth = 2; \n        contextRef.current = context; \n    }, [])\n\n    const startDrawing = ({nativeEvent}) => {\n        const {offsetX, offsetY} = nativeEvent;\n        contextRef.current.beginPath(); \n        contextRef.current.moveTo(offsetX, offsetY);\n        setIsDrawing(true); \n        draw(nativeEvent);\n    }\n    const finishDrawing = () => {\n        contextRef.current.closePath(); \n        setIsDrawing(false);\n    }\n    const draw = ({nativeEvent}) => {\n        if (!isDrawing) {\n            return\n        }\n        const {offsetX, offsetY} = nativeEvent;\n        contextRef.current.lineTo(offsetX, offsetY); \n        contextRef.current.stroke(); \n    }\n\n    const changeColor = (e) => {\n        const color = e.target.id; \n        contextRef.current.strokeStyle = color; \n    }\n\n    const changeLine = (e) => {\n        const weight = e.target.value; \n        \n        switch (weight) {\n            case 'light': \n                contextRef.current.lineWidth = 2; \n                break\n            case 'medium': \n                contextRef.current.lineWidth = 5;\n                break\n            case 'heavy': \n                contextRef.current.lineWidth = 10; \n        }\n    }\n\n    const reset = () => {\n        contextRef.current.putImageData(image, 0, 0); \n    }\n\n    const save = () => {\n        setImage(contextRef.current.getImageData(0, 0, \n            contextRef.current.canvas.width, contextRef.current.canvas.height));\n    }\n\n    const final = async () => {\n        const imageURL = canvasRef.current.toDataURL(); \n        try {\n            const response =  await fetch('/drawing', {\n                method: 'PUT', \n                headers: {\n                    'Content-Type': 'application/json'\n                }, \n                body: JSON.stringify({\n                    email: user.email, \n                    imageURL,\n                })\n            })\n            if (response.ok) {\n                const data = await response.json(); \n                dispatch(setUser(data));\n                history.push('/home');\n            }\n        } catch (err) {\n            console.log(err); \n        }\n    };\n\n    return (\n        <div className={\"page__draw\"}>\n            <img src={board} className={\"container__canvas-board\"}/>\n            <div className={\"container__canvas\"}>\n                <canvas\n                    onMouseDown={startDrawing}\n                    onMouseUp={finishDrawing}\n                    onMouseMove={draw}\n                    ref={canvasRef}\n                />\n            </div>\n            <div className={\"container__paint\"}>\n                <select id={\"line-weight\"} className={\"dropdown\"} onChange={changeLine}>\n                    <option value={'light'}>Light</option>\n                    <option value={'medium'}>Medium</option>\n                    <option value={'heavy'}>Heavy</option>\n                </select>\n                <button id={'red'} className={\"paint__red\"} onClick={changeColor}/>\n                <button id={'green'} className={\"paint__green\"} onClick={changeColor}/>\n                <button id={'blue'} className={\"paint__blue\"} onClick={changeColor}/>\n                <button onClick={reset} className={\"paint__reset\"}>Reset</button>\n                <button onClick={save} className={\"paint__save\"}>Save</button>\n            </div>\n                <button onClick={final} className={\"paint__submit\"}>\n                    <span>Submit</span>\n                </button>\n        </div>\n    )\n}\n\n\nexport default Drawing; ","/home/rhys/Brainwhizz/react-whizz/src/components/auth/ModalLog.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/ModalSign.js",["135"],"import React, { useEffect } from 'react';\nimport './Auth.css';\n\nconst MODAL_STYLES = {\n    position: 'fixed', \n    top: '50%', \n    left: '50%', \n    borderRadius: '5px',\n    transform: 'translate(-50%, -50%)', \n    backgroundColor: 'rgb(96, 255, 255)', \n    zIndex: 1000,\n    height: '540px',\n    width: '360px'\n}\n\nconst OVERLAY_STYLE = {\n    position: 'fixed', \n    top: 0, \n    left: 0, \n    right: 0, \n    bottom: 0, \n    backgroundColor: 'rgba(0, 0, 0, 0.7)', \n    zIndex: 1000, \n}\n\nconst ModalSign = ({open, children}) => {\n    if (!open) return null;    \n    \n    return (\n        <>\n            <div style={OVERLAY_STYLE} />\n            <div style={MODAL_STYLES}>\n                {children}\n            </div>\n        </>\n    )\n}\n\nexport default ModalSign; ",{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":27,"column":6,"nodeType":"142","endLine":27,"endColumn":12,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":55,"column":9,"nodeType":"146","endLine":55,"endColumn":32},{"ruleId":"144","severity":1,"message":"145","line":56,"column":9,"nodeType":"146","endLine":56,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":57,"column":9,"nodeType":"146","endLine":57,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":58,"column":9,"nodeType":"146","endLine":58,"endColumn":27},{"ruleId":"147","severity":1,"message":"148","line":122,"column":9,"nodeType":"149","messageId":"150","endLine":123,"endColumn":26},{"ruleId":"151","severity":1,"message":"152","line":34,"column":22,"nodeType":"153","messageId":"154","endLine":34,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":75,"column":24,"nodeType":"157","messageId":"154","endLine":75,"endColumn":26},{"ruleId":"140","severity":1,"message":"158","line":126,"column":8,"nodeType":"142","endLine":126,"endColumn":14,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":193,"column":50,"nodeType":"162","messageId":"163","endLine":193,"endColumn":52},{"ruleId":"160","severity":1,"message":"161","line":206,"column":50,"nodeType":"162","messageId":"163","endLine":206,"endColumn":52},{"ruleId":"164","severity":1,"message":"165","line":9,"column":5,"nodeType":"166","messageId":"167","endLine":43,"endColumn":6},{"ruleId":"140","severity":1,"message":"168","line":69,"column":8,"nodeType":"142","endLine":69,"endColumn":14,"suggestions":"169"},{"ruleId":"144","severity":1,"message":"145","line":195,"column":17,"nodeType":"146","endLine":195,"endColumn":68},{"ruleId":"140","severity":1,"message":"170","line":70,"column":8,"nodeType":"142","endLine":70,"endColumn":17,"suggestions":"171"},{"ruleId":"140","severity":1,"message":"172","line":11,"column":8,"nodeType":"142","endLine":11,"endColumn":17,"suggestions":"173"},{"ruleId":"144","severity":1,"message":"145","line":17,"column":21,"nodeType":"146","endLine":17,"endColumn":48},{"ruleId":"164","severity":1,"message":"165","line":62,"column":9,"nodeType":"166","messageId":"167","endLine":71,"endColumn":10},{"ruleId":"144","severity":1,"message":"145","line":108,"column":13,"nodeType":"146","endLine":108,"endColumn":69},{"ruleId":"174","severity":1,"message":"175","line":1,"column":17,"nodeType":"176","messageId":"177","endLine":1,"endColumn":26},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["180"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-eval","eval can be harmful.","CallExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.",["181"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'colors.length'. Either include it or remove the dependency array.",["182"],"React Hook useEffect has missing dependencies: 'setCircleDasharray', 'setCounter', and 'setTime'. Either include them or remove the dependency array. If 'setTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["183"],"React Hook useEffect has missing dependencies: 'setCounter' and 'setTime'. Either include them or remove the dependency array. If 'setTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["184"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [history, user]",{"range":"195","text":"196"},"Update the dependencies array to be: [time, user.email]",{"range":"197","text":"198"},"Update the dependencies array to be: [colors.length, time]",{"range":"199","text":"200"},"Update the dependencies array to be: [counter, setCircleDasharray, setCounter, setTime]",{"range":"201","text":"202"},"Update the dependencies array to be: [counter, setCounter, setTime]",{"range":"203","text":"204"},[996,1002],"[history, user]",[4500,4506],"[time, user.email]",[2638,2644],"[colors.length, time]",[2016,2025],"[counter, setCircleDasharray, setCounter, setTime]",[399,408],"[counter, setCounter, setTime]"]