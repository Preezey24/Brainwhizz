[{"/home/rhys/Brainwhizz/react-whizz/src/index.js":"1","/home/rhys/Brainwhizz/react-whizz/src/App.js":"2","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginForm.js":"3","/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpForm.js":"4","/home/rhys/Brainwhizz/react-whizz/src/store/index.js":"5","/home/rhys/Brainwhizz/react-whizz/src/store/reducers/session.js":"6","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LogoutButton.js":"7","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/MathGame.js":"8","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/math_tables.js":"9","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/clock_helper.js":"10","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/MemoryGame.js":"11","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Clock.js":"12","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Modal.js":"13","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Modal.js":"14","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Clock.js":"15","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Light.js":"16"},{"size":379,"mtime":1609969876910,"results":"17","hashOfConfig":"18"},{"size":739,"mtime":1610128491513,"results":"19","hashOfConfig":"18"},{"size":1298,"mtime":1609997860290,"results":"20","hashOfConfig":"18"},{"size":2222,"mtime":1609975046010,"results":"21","hashOfConfig":"18"},{"size":809,"mtime":1609978488430,"results":"22","hashOfConfig":"18"},{"size":2353,"mtime":1609998321730,"results":"23","hashOfConfig":"18"},{"size":371,"mtime":1609998414490,"results":"24","hashOfConfig":"18"},{"size":3741,"mtime":1610128491523,"results":"25","hashOfConfig":"18"},{"size":2074,"mtime":1610128491513,"results":"26","hashOfConfig":"18"},{"size":216,"mtime":1610128491513,"results":"27","hashOfConfig":"18"},{"size":2140,"mtime":1610134070753,"results":"28","hashOfConfig":"18"},{"size":678,"mtime":1610128491523,"results":"29","hashOfConfig":"18"},{"size":811,"mtime":1610128491523,"results":"30","hashOfConfig":"18"},{"size":811,"mtime":1610128491523,"results":"31","hashOfConfig":"18"},{"size":678,"mtime":1610128491523,"results":"32","hashOfConfig":"18"},{"size":223,"mtime":1610133194493,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"ilkr6e",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rhys/Brainwhizz/react-whizz/src/index.js",[],["71","72"],"/home/rhys/Brainwhizz/react-whizz/src/App.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginForm.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpForm.js",[],"/home/rhys/Brainwhizz/react-whizz/src/store/index.js",[],"/home/rhys/Brainwhizz/react-whizz/src/store/reducers/session.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/LogoutButton.js",["73"],"import React from \"react\";\nimport { logout } from \"../../store/reducers/session\";\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst LogoutButton = () => {\n    const dispatch = useDispatch(); \n\n    const onLogout = async (e) => {\n        await dispatch(logout());\n    };\n\n    return <button onClick={onLogout}>Logout</button>;\n};\n\nexport default LogoutButton;","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/MathGame.js",["74","75"],"import React, {useState, useEffect} from 'react';\nimport {useHistory} from 'react-router-dom'; \nimport Clock from './Clock'; \nimport Modal from './Modal'; \nimport mathProblems from '../../component_utils/math_tables'\n\n//establish score outside of functional component so that it persists after the components re-renders\nlet score = 0;  \n\nconst MathGame = () => {\n    //math questions & answers \n    const [questions, setQuestions] = useState(mathProblems())\n    const [answers, setAnswers] = useState({});\n    //countdown clock\n    const [time, setTime] = useState('02:00'); \n    const [timeUp, setTimeUp] = useState(false);\n    const [counter, setCounter] = useState(10);\n    //modal states \n    const [isOpen, setIsOpen] = useState(false);  \n    const history = useHistory(); \n\n    //calculate the actual answers for comparison with user input \n    let ansArr = []; \n    questions.forEach(question => {\n        let answer = eval(question); \n        ansArr.push(answer);  \n    });\n\n    //update the input answers array as answers are typed in\n    const answerHandler = e => {\n        const { id, value } = e.target; \n        setAnswers(answers => ({\n            ...answers, \n            [id]: value\n        }))  \n    };  \n    \n    //when button is clicked to move onto the next set of math questions \n    const submitHandler = () => {\n        //complete validation that all inputs are filled out before advancing\n        let valArr = Object.values(answers); \n        let exit; \n        if (valArr.length !== 10) return; \n        valArr.forEach(val => {\n            if (!val) {\n                exit = true; \n                //this return is exiting from the callback, not the entire function\n                return; \n            }\n        }); \n        if (exit) {\n            return; \n        }\n\n        //check answers of user input versus correct answers  \n        ansArr.forEach((correct, i) => {\n           if (correct == answers[i]) {\n               score += 10; \n           } \n        });  \n\n        //clean up input fields, reset answers and give a new set of questions \n        for (let i = 0; i < 10; i++) {\n            document.getElementById(i).value = null; \n        }\n        setAnswers({}); \n        setQuestions(mathProblems());        \n    }\n\n    //when time runs out and the modal appears, showing your score and asking whether you want to play again\n    //useEffect was used to combat constant re-rendering of the page as state changed\n    useEffect(() => {\n        if (time === '00:00') {\n            setTimeUp(true); \n            setTime(null); \n            setIsOpen(true); \n        }\n    }, [time]);\n\n    //when button is clicked on modal to play again \n    const playAgain = () => {\n        //reset everything for new game\n        setAnswers({}); \n        setQuestions(mathProblems()); \n        setTime('02:00');\n        setTimeUp(false); \n        setIsOpen(false); \n        setCounter(10)\n    }\n\n    // when button is clicked on modal to quit game \n    const exitGame = () => { \n        history.push('/')\n    }\n    \n    return (\n        <>\n            <Clock time={time} setTime={setTime} counter={counter} setCounter={setCounter} />\n            {questions.map((question, i) => {\n                return (\n                    <div key={i}>\n                        {question}\n                        <input type='text' value={answers[i]} onChange={answerHandler} id={i}/>\n                    </div>\n                )\n            })}\n            <button onClick={submitHandler}>Next</button>\n            {timeUp &&\n                <div>\n                    <Modal open={isOpen} score={score} playAgain={playAgain} exitGame={exitGame}/>\n                </div> \n            }\n        </>\n    )\n}\n\nexport default MathGame; ","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/math_tables.js",["76"],"function getRandInt (max) {\n    return Math.floor(Math.random() * max); \n}\n\nfunction mathOp (operation) {\n    let nums; \n    let num1 = 2; \n    let num2 = 3; \n    switch (operation) {\n        case '+':\n            nums = [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17,\n                18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\n                33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, \n                48, 49, 50]\n            num1 = nums[getRandInt(49)];\n            num2 = nums[getRandInt(49)];\n            return `${num1} + ${num2}`; \n        case '-': \n            while (num1 < num2) {\n                nums = [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17,\n                    18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\n                    33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, \n                    48, 49, 50] \n                num1 = nums[getRandInt(49)]; \n                num2 = nums[getRandInt(49)]; \n            }\n            return `${num1} - ${num2}`; \n        case '/': \n            while (num1 % num2 !== 0) {\n                let nums = [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17,\n                            18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\n                            33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, \n                            48, 49, 50]\n                num1 = nums[getRandInt(49)];\n                num2 = nums[getRandInt(49)];\n            } \n            return `${num1} / ${num2}`; \n        case '*': \n            nums = [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12];  \n            num1 = nums[getRandInt(12)];\n            num2 = nums[getRandInt(12)];\n            return `${num1} * ${num2}`; \n    }\n};\n\nfunction mathProblems () {\n    const ops = ['+', '-', '/', '*']; \n    let qArr = []; \n    for (let i = 0; i < 10; i++) {\n        //establish operation to be used at random\n        const op = ops[getRandInt(4)];\n        qArr.push(mathOp(op)) \n    }\n    return qArr; \n}\n\nexport default mathProblems; ","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/clock_helper.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/MemoryGame.js",["77"],"/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Clock.js",["78"],"import React, { useEffect } from 'react'; \nimport { timeConversion } from '../../component_utils/clock_helper'; \n\nconst Clock = ({time, setTime, counter, setCounter}) => {   \n    useEffect(() => {\n        const timer = counter > 0 && setInterval(() => {\n            setCounter(counter - 1);  \n        }, 1000);\n        setTime(timeConversion(counter)); \n        return () => clearInterval(timer); \n    }, [counter]); \n\n    return (\n       <div>\n           <h1>Countdown</h1>\n           <p>\n            <span>\n                Time: \n            </span>\n            <span>\n                {time}  \n            </span>\n           </p>\n       </div> \n    )\n}\n\nexport default Clock; ","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Modal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Modal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Clock.js",["79"],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Light.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":23,"nodeType":"86","messageId":"87","endLine":3,"endColumn":34},{"ruleId":"88","severity":1,"message":"89","line":25,"column":22,"nodeType":"90","messageId":"91","endLine":25,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":57,"column":24,"nodeType":"94","messageId":"91","endLine":57,"endColumn":26},{"ruleId":"95","severity":1,"message":"96","line":9,"column":5,"nodeType":"97","messageId":"98","endLine":43,"endColumn":6},{"ruleId":"84","severity":1,"message":"99","line":14,"column":12,"nodeType":"86","messageId":"87","endLine":14,"endColumn":18},{"ruleId":"100","severity":1,"message":"101","line":11,"column":8,"nodeType":"102","endLine":11,"endColumn":17,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"101","line":11,"column":8,"nodeType":"102","endLine":11,"endColumn":17,"suggestions":"104"},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","no-eval","eval can be harmful.","CallExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'timeUp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setCounter' and 'setTime'. Either include them or remove the dependency array. If 'setTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"109","fix":"111"},"Update the dependencies array to be: [counter, setCounter, setTime]",{"range":"112","text":"113"},{"range":"114","text":"113"},[405,414],"[counter, setCounter, setTime]",[405,414]]