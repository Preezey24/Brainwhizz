[{"/home/rhys/Brainwhizz/react-whizz/src/index.js":"1","/home/rhys/Brainwhizz/react-whizz/src/App.js":"2","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginForm.js":"3","/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpForm.js":"4","/home/rhys/Brainwhizz/react-whizz/src/store/index.js":"5","/home/rhys/Brainwhizz/react-whizz/src/store/reducers/session.js":"6","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LogoutButton.js":"7","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/MathGame.js":"8","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/math_tables.js":"9","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/clock_helper.js":"10","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/MemoryGame.js":"11","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Clock.js":"12","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Modal.js":"13","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Modal.js":"14","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Clock.js":"15","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Light.js":"16","/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/memory.js":"17","/home/rhys/Brainwhizz/react-whizz/src/components/splash/SplashAuth.js":"18","/home/rhys/Brainwhizz/react-whizz/src/components/navigation/NavBar.js":"19","/home/rhys/Brainwhizz/react-whizz/src/components/navigation/ProfileButton.js":"20","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginFormModal.js":"21","/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpModal.js":"22","/home/rhys/Brainwhizz/react-whizz/src/components/drawing/Drawing.js":"23","/home/rhys/Brainwhizz/react-whizz/src/components/auth/ModalLog.js":"24","/home/rhys/Brainwhizz/react-whizz/src/components/auth/ModalSign.js":"25","/home/rhys/Brainwhizz/react-whizz/src/components/drawing/Instruction.js":"26","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Instruction.js":"27","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Instruction.js":"28","/home/rhys/Brainwhizz/react-whizz/src/components/footer/Footer.js":"29","/home/rhys/Brainwhizz/react-whizz/src/components/splash/SplashUnAuth.js":"30"},{"size":478,"mtime":1610416226499,"results":"31","hashOfConfig":"32"},{"size":2214,"mtime":1611792178531,"results":"33","hashOfConfig":"32"},{"size":2802,"mtime":1610826445546,"results":"34","hashOfConfig":"32"},{"size":3476,"mtime":1610807395826,"results":"35","hashOfConfig":"32"},{"size":848,"mtime":1610994747060,"results":"36","hashOfConfig":"32"},{"size":3298,"mtime":1610995453740,"results":"37","hashOfConfig":"32"},{"size":724,"mtime":1610821585556,"results":"38","hashOfConfig":"32"},{"size":9052,"mtime":1611792542051,"results":"39","hashOfConfig":"32"},{"size":2110,"mtime":1611792382051,"results":"40","hashOfConfig":"32"},{"size":217,"mtime":1610643915137,"results":"41","hashOfConfig":"32"},{"size":11303,"mtime":1611673071636,"results":"42","hashOfConfig":"32"},{"size":3034,"mtime":1610649520747,"results":"43","hashOfConfig":"32"},{"size":705,"mtime":1611672558506,"results":"44","hashOfConfig":"32"},{"size":702,"mtime":1611672580336,"results":"45","hashOfConfig":"32"},{"size":479,"mtime":1610935792366,"results":"46","hashOfConfig":"32"},{"size":223,"mtime":1610236844543,"results":"47","hashOfConfig":"32"},{"size":253,"mtime":1610236844543,"results":"48","hashOfConfig":"32"},{"size":4193,"mtime":1611674935036,"results":"49","hashOfConfig":"32"},{"size":1556,"mtime":1610998087580,"results":"50","hashOfConfig":"32"},{"size":1233,"mtime":1610824602956,"results":"51","hashOfConfig":"32"},{"size":890,"mtime":1610772529150,"results":"52","hashOfConfig":"32"},{"size":891,"mtime":1610772651980,"results":"53","hashOfConfig":"32"},{"size":5775,"mtime":1611792459481,"results":"54","hashOfConfig":"32"},{"size":1232,"mtime":1610823726666,"results":"55","hashOfConfig":"32"},{"size":750,"mtime":1611792214061,"results":"56","hashOfConfig":"32"},{"size":1508,"mtime":1611677871576,"results":"57","hashOfConfig":"32"},{"size":1452,"mtime":1611633070820,"results":"58","hashOfConfig":"32"},{"size":1579,"mtime":1611632778530,"results":"59","hashOfConfig":"32"},{"size":2094,"mtime":1611420030768,"results":"60","hashOfConfig":"32"},{"size":3389,"mtime":1611780601991,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"ilkr6e",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"64"},"/home/rhys/Brainwhizz/react-whizz/src/index.js",[],["129","130"],"/home/rhys/Brainwhizz/react-whizz/src/App.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginForm.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpForm.js",[],"/home/rhys/Brainwhizz/react-whizz/src/store/index.js",[],"/home/rhys/Brainwhizz/react-whizz/src/store/reducers/session.js",["131"],"const SET_USER = 'session/setUser'; \nconst REMOVE_USER = 'session/removeUser'; \nconst SET_ERRORS = 'session/setErrors';\nconst REMOVE_ERRORS = 'session/removeErrors'; \n\nexport const setUser = (user) => {\n    return {\n        type: SET_USER, \n        payload: user, \n    };\n}; \n\nconst removeUser = () => {\n    return {\n        type: REMOVE_USER, \n    };\n};\n\nconst setErrors = ({errors}) => {\n    return {\n        type: SET_ERRORS, \n        payload: errors, \n    }\n}\n\nexport const removeErrors = () => {\n    return {\n        type: REMOVE_ERRORS,\n    }\n}\n\nexport const signUp = (user) => async (dispatch) => {\n    const { username, email, password, confirm } = user; \n    try {\n        const response = await fetch('/auth/signup', {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                email,\n                password,\n                confirm,\n                math_high: null, \n                math_total: null, \n                memory_high: null,\n                memory_total: null, \n                total_score: null,\n            }),\n        }); \n        if (response.ok) {\n            const data = await response.json();\n            dispatch(setUser(data)); \n        } else {\n            const errors = await response.json(); \n            dispatch(setErrors(errors));\n        }\n    } catch (err) {\n        console.log(err.message);\n    }  \n}; \n\nexport const logIn = (user) => async (dispatch) => {\n    const { email, password } = user;\n    try { \n        const response = await fetch('/auth/login', {\n            method: 'POST', \n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password,\n            }),\n        });\n        if (response.ok) {  \n            const data = await response.json(); \n            dispatch(setUser(data)); \n        } else {\n            const errors = await response.json();  \n            dispatch(setErrors(errors));\n        }\n    } catch (err) { \n        console.log(err); \n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    try {\n        const response = await fetch('/auth/logout')\n        if (response.ok) {\n            dispatch(removeUser()); \n        }\n    } catch (err) {\n        console.log(err); \n    }\n}\n\nconst initialState = { user: null, errors: null }; \n\nconst sessionReducer = (state = initialState, action) => {\n    let newState; \n    switch (action.type) {\n        case SET_USER: \n            //create a copy, do not mutate existing to avoid race conditions \n            newState = Object.assign({}, state);\n            newState.errors = null;  \n            newState.user = action.payload; \n            return newState; \n        case REMOVE_USER: \n            newState = Object.assign({}, state); \n            newState.user = null; \n            return newState; \n        case SET_ERRORS: \n            newState = state; \n            newState.errors = action.payload;\n            return newState;\n        case REMOVE_ERRORS: \n            newState = state; \n            newState.errors = action.payload;  \n        default: \n            return state; \n    }\n};\n\nexport default sessionReducer; ","/home/rhys/Brainwhizz/react-whizz/src/components/auth/LogoutButton.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/math/MathGame.js",["132","133","134","135"],"/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/math_tables.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/clock_helper.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/MemoryGame.js",["136","137","138"],"import React, { useState, useEffect, useRef } from 'react'; \nimport {useHistory} from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Clock from './Clock'; \nimport Modal from './Modal'; \nimport Light from './Light';  \nimport { randColor } from '../../component_utils/memory';\nimport './Memory.css'; \nimport { setUser } from '../../../store/reducers/session';\nimport {IconContext} from \"react-icons\"; \nimport {FcElectronics} from 'react-icons/fc';\nimport {IoLogoXbox} from 'react-icons/io5'; \nimport {VscDashboard} from 'react-icons/vsc'; \nimport turret from '../../../images/turret.png';\nimport {AiFillFire} from 'react-icons/ai'; \nimport { IoInformationCircleSharp } from \"react-icons/io5\";\nimport Instruction from './Instruction'; \n\n//so data persists passed certain re-rendering\nlet answerArr = []; \n\nconst MemoryGame = () => {\n    //useRef for the score components so that they do not update on re-render\n    const gameScore = useRef(-1);\n    const score = useRef(-1);\n\n    const history = useHistory();\n    const dispatch = useDispatch();  \n    //validate user is authenticated\n    const user = useSelector(state => state.session.user);\n    //memory light color array, that contains the correct answers\n    const [colors, setColors] = useState([]);  \n    //set keyframes \n    const [keyFrame, setKeyFrame] = useState([]); \n    //countdown clock\n    const [time, setTime] = useState('00:03'); \n    const [counter, setCounter] = useState(3);\n    //modal states \n    const [isOpen, setIsOpen] = useState(false);\n    //high score \n    const [high, setHigh] = useState({});\n    //instruction modal \n    const [infoModal, setInfoModal] = useState(false); \n\n    //test button click \n    const mainClick = () => {\n        let nextColor = randColor(); \n        while (nextColor === colors[colors.length-1]) {\n            nextColor = randColor(); \n        }\n        setColors([...colors, nextColor]); \n        score.current += 1; \n        gameScore.current += 1; \n        setCounter(3); \n        answerArr = [];\n        //keyframe animations for color dynamic transitions \n        setKeyFrame([...keyFrame, {backgroundColor: `${nextColor}`}]);\n\n        const container = document.getElementById('lights'); \n        container.setAttribute('style', 'display: none;'); \n        const button = document.getElementById('go'); \n        button.setAttribute('style', 'display: none;'); \n    }\n    \n    useEffect(() => {\n        const main = document.getElementById(\"main_light\");\n        main.animate(keyFrame, 3000); \n    }, [colors])\n\n    //have the lights appear for the user to select after color transitions complete\n    useEffect(() => {\n        if (time === '00:00') {\n            const container = document.getElementById('lights'); \n            container.setAttribute('style', 'display: block;'); \n        }\n        if (colors.length === 0) {\n            const container = document.getElementById('lights'); \n            container.setAttribute('style', 'display: block;'); \n            const button = document.getElementById('go'); \n            button.setAttribute('style', 'display: block;'); \n        }\n    }, [time])\n\n    //color transitiion on light click for the user\n    //make comparison between correct answer and user answer \n    const lightClick = (e) => {\n        const light = document.getElementById(e.target.id); \n        light.animate([{backgroundColor: `${light.id}`}, {backgroundColor: 'white'}, \n                        {backgroundColor: `${light.id}`}], 600); \n        answerArr.push(light.id);\n        //activate laser one\n        const laserOne = document.getElementById(\"laserOne\");\n        const flameOne = document.getElementById(\"flameOne\");  \n        laserOne.setAttribute(\"stroke\", light.id); \n        let lengthOne = 0; \n        let lineDashArrayOne;\n        const laserAdvanceOne = setInterval(() => {\n            lineDashArrayOne = `${lengthOne += 28} 140`;\n            laserOne.setAttribute(\"stroke-dasharray\", lineDashArrayOne);\n        }, 100);\n        setTimeout(() => {\n            clearInterval(laserAdvanceOne);\n            laserOne.setAttribute(\"stroke-dasharray\", \"0 140\");\n            flameOne.style.display = \"block\"; \n        }, 600);\n        setTimeout(() => {\n            flameOne.style.display = \"none\"; \n        }, 800)\n\n        //activate laser two\n        const laserTwo = document.getElementById(\"laserTwo\");\n        const flameTwo = document.getElementById(\"flameTwo\");\n        laserTwo.setAttribute(\"stroke\", light.id); \n        let lengthTwo = 0; \n        let lineDashArrayTwo;\n        const laserAdvanceTwo = setInterval(() => {\n            lineDashArrayTwo = `${lengthTwo += 28} 140`;\n            laserTwo.setAttribute(\"stroke-dasharray\", lineDashArrayTwo);\n        }, 100);\n        setTimeout(() => {\n            clearInterval(laserAdvanceTwo);\n            laserTwo.setAttribute(\"stroke-dasharray\", \"0 140\"); \n            flameTwo.style.display = \"block\";\n        }, 600);\n        setTimeout(() => {\n            flameTwo.style.display = \"none\"; \n        }, 800)\n        \n        //check answer\n        answerArr.forEach((answer, i) => {\n            if (answer !== colors[i]) {\n                //update score database, check if high score\n                const updateScore = async () => {\n                    try {\n                        const response = await fetch('/score/memory/high', {\n                            method: 'PUT', \n                            headers: {\n                                'Content-Type': 'application/json'\n                            }, \n                            body: JSON.stringify({\n                                email: user.email, \n                                gameScore: gameScore.current,\n                            }),\n                        });\n                        if (response.ok) {  \n                            if (response.status === 204) return; \n                            const data = await response.json(); \n                            setHigh(data); \n                        }\n                    } catch (err) {\n                        console.log(err); \n                    }\n                }\n                updateScore(); \n                setIsOpen(true); \n            }\n        });\n        //make button appear for next round\n        if (answerArr.length === colors.length) {\n            const button = document.getElementById('go'); \n            button.setAttribute('style', 'display: block;'); \n        }\n    };\n\n    const info = () => {\n        setInfoModal(true);  \n    }\n\n    //when button is clicked on modal to play again \n    const playAgain = () => {\n        //reset everything for new game\n        setTime('00:03');\n        setIsOpen(false); \n        setCounter(3)\n        gameScore.current = 0; \n        setColors([]); \n        setKeyFrame([]); \n        setHigh({}); \n    }\n\n    // when button is clicked on modal to quit game \n    const exitGame = () => { \n        const updateScore = async () => {\n            try {\n                const response = await fetch('/score/memory', {\n                    method: 'PUT', \n                    headers: {\n                        'Content-Type': 'application/json'\n                    }, \n                    body: JSON.stringify({\n                        email: user.email, \n                        score: score.current, \n                    }),\n                });\n                if (response.ok) {\n                    const data = await response.json(); \n                    dispatch(setUser(data)); \n                }\n            } catch (err) {\n                console.log(err); \n            }\n        }\n        updateScore(); \n        gameScore.current = 0;\n        score.current = 0;\n        history.push('/home');\n    }\n    \n    return (\n        <div className={\"page__memory\"}>\n            <div className={\"main\"} id={\"main_light\"}/>\n            <div className={\"container__lights\"} id={'lights'}>\n                <img src={turret} className={\"container__turret\"}/>\n                <div className={\"container__laser-one-div\"}>\n                    <svg className={\"container__laser-one-svg\"} xmlns=\"http://www.w3.org/2000/svg\">\n                        <line id={\"laserOne\"} className={\"container__laser-beam\"} x1=\"0\" y1=\"140\" x2=\"0\" y2=\"0\" \n                        strokeDasharray=\"0 140\"/>\n                    </svg>\n                </div>\n                <div className={\"container__laser-two-div\"}>\n                    <svg className={\"container__laser-two-svg\"} xmlns=\"http://www.w3.org/2000/svg\">\n                        <line id={\"laserTwo\"} className={\"container__laser-beam\"} x1=\"0\" y1=\"140\" x2=\"0\" y2=\"0\" \n                        strokeDasharray=\"0 140\"/>\n                    </svg>\n                </div>\n                <FcElectronics className={\"container__electronics\"}/>\n                <IoLogoXbox className={\"container__xbox\"}/>\n                <div className={\"container__xbox-dot\"}></div>\n                <VscDashboard className={\"container__dashboard\"}/>\n                <div id={\"flameOne\"} className={\"container__flame-divOne\"}>\n                    <IconContext.Provider value={{color:\"orange\", size: \"40px\"}}>\n                        <AiFillFire/>\n                    </IconContext.Provider>\n                </div>\n                <div id={\"flameTwo\"} className={\"container__flame-divTwo\"}>\n                    <IconContext.Provider value={{color:\"orange\", size: \"40px\"}}>\n                        <AiFillFire/>\n                    </IconContext.Provider>\n                </div>\n                <Light lightClick={lightClick} id={'red'} style={{backgroundColor: 'red',\n                position: 'absolute', top: '210px', left: '230px'}}/>\n                <Light lightClick={lightClick} id={'blue'} style={{backgroundColor: 'blue',\n                position: 'absolute', top: '210px', left: '-140px'}}/>\n                <Light lightClick={lightClick} id={'green'} style={{backgroundColor: 'green', \n                position: 'absolute', top: '120px', left: '-40px', width: \"80px\", height: \"80px\"}}/>\n                <Light lightClick={lightClick} id={'yellow'} style={{backgroundColor: 'yellow',\n                position: 'absolute', top: '120px', left: '140px', width: \"80px\", height: \"80px\"}}/>\n                <Light lightClick={lightClick} id={'purple'} style={{backgroundColor: 'purple',\n                position: 'absolute', top: '210px', left: '40px'}}/>\n                <div onClick={info}>\n                        <IconContext.Provider value={{className: 'memory__info'}}>\n                            <IoInformationCircleSharp />\n                        </IconContext.Provider>\n                </div>\n            </div>\n            <div>\n                    <Instruction isOpen={infoModal} setIsOpen={setInfoModal}/>\n            </div>\n            <button onClick={mainClick} id={'go'} className={\"button__go\"}>\n                <span style={{position:\"absolute\", top: \"-10px\", left: \"25px\"}}>Go</span>\n            </button>  \n            <Clock time={time} setTime={setTime} counter={counter} setCounter={setCounter}/>\n            <div>\n                <Modal open={isOpen} gameScore={gameScore} score={score} playAgain={playAgain} \n                high={high} exitGame={exitGame}/>\n            </div>\n        </div>\n    )\n}\n\nexport default MemoryGame; ","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Clock.js",["139"],"import React, { useEffect, useRef } from 'react'; \nimport { timeConversion } from '../../component_utils/clock_helper'; \nimport './Clock.css'; \n\nconst WARNING_THRESHOLD = 30; \nconst ALERT_THRESHOLD = 10; \nconst COLOR_CODES = {\n    info: {\n        color: \"green\"\n    },\n    warning: {\n        color: \"orange\",\n        threshold: WARNING_THRESHOLD\n    }, \n    alert: {\n        color: \"red\",\n        threshold: ALERT_THRESHOLD\n    }\n}; \n\nlet remainingPathColor = COLOR_CODES.info.color\n\nconst Clock = ({time, setTime, counter, setCounter}) => {   \n    const timeLimit = useRef(time); \n\n    function timeRemaining() {\n        const timeLeft = counter/timeLimit.current;\n        return (timeLeft - (1 / timeLimit.current) * (1 - timeLeft));\n    };\n    \n    function setCircleDasharray() {\n        const circleDasharray = `${(\n            timeRemaining() * '283'\n        ).toFixed(0)} 283`;\n        document.getElementById('base-timer-path-remaining')\n                .setAttribute('stroke-dasharray', circleDasharray)\n    };\n\n    function setPathColor(timeLeft) {\n        const {alert, warning} = COLOR_CODES; \n\n        if (timeLeft <= alert.threshold) {\n            remainingPathColor = \"red\";\n        } else if (timeLeft <= warning.threshold) {\n            remainingPathColor = \"orange\"; \n        } else {\n            remainingPathColor = 'green'; \n        }\n    };\n\n    function shake(timeLeft) {\n        const circle = document.querySelector('.base-timer__circle'); \n        if (timeLeft <= 10) {\n            circle.style.animation = \"shake 0.5s cubic-bezier(0.42, 0.0, 0.58, 1.0) both\"; \n            setTimeout(() => {\n                circle.removeAttribute(\"style\"); \n            }, 500);  \n        }\n    }\n    \n    useEffect(() => {\n        const timer = counter > 0 && setInterval(() => {\n            setCounter(counter - 1);   \n        }, 1000);\n        setCircleDasharray();\n        setPathColor(counter);   \n        setTime(counter);\n        shake(counter); \n        return () => clearInterval(timer); \n    }, [counter]); \n\n    return (\n       <div className={\"base-timer\"}>\n           <svg className={\"base-timer__svg\"} viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n               <g className={\"base-timer__circle\"}>\n                   <circle className={\"base-timer__path-elapsed\"} cx=\"50\" cy=\"50\" r=\"45\" />\n                   <path \n                        id=\"base-timer-path-remaining\"\n                        strokeDasharray=\"283\"\n                        className={'base-timer__path-remaining'}\n                        style={{stroke: `${remainingPathColor}`}}\n                        d=\"\n                            M 50, 50\n                            m -45, 0\n                            a 45,45 0 1,0 90,0\n                            a 45,45 0 1,0 -90,0\n                            \"\n                    ></path>\n               </g>\n           </svg>\n           <span className={\"base-timer__label\"}>\n               {timeConversion(time)}\n           </span>\n       </div> \n    )\n}\n\nexport default Clock; ","/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Modal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Modal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Clock.js",["140"],"import React, { useEffect } from 'react'; \nimport { timeConversion } from '../../component_utils/clock_helper'; \n\nconst Clock = ({setTime, counter, setCounter}) => {   \n    useEffect(() => {\n        const timer = counter > 0 && setInterval(() => {\n            setCounter(counter - 1);  \n        }, 1000);\n        setTime(timeConversion(counter)); \n        return () => clearInterval(timer); \n    }, [counter]); \n\n    return (\n       <>\n       </> \n    )\n}\n\nexport default Clock; ","/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Light.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/component_utils/memory.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/splash/SplashAuth.js",["141","142","143","144","145","146","147","148","149"],"import React from 'react'; \nimport { useSelector } from 'react-redux'; \nimport { NavLink } from 'react-router-dom';\nimport './SplashAuth.css';\nimport { IconContext } from 'react-icons/lib';\nimport { FaDivide, FaEye } from \"react-icons/fa\";\nimport { FcCalculator, FcIdea, FcPicture, FcClock, FcMindMap, FcFrame } from \"react-icons/fc\";\nimport { ImTrophy } from 'react-icons/im'; \n\n\nconst SplashAuth = () => {\n    const user = useSelector(state => state.session.user);  \n\n    let drawing; \n    if (user) {\n        if (user.image_url) {\n            drawing = (\n                <>\n                    <img src={user.image_url}/>\n                </>\n            )\n        } else {\n            drawing = (\n                <span className={\"picture__text\"}>\n                    Open up your creative side, \n                    draw something! \n                </span>\n            )\n        }\n    };\n\n    return (\n        <div className={\"page__main\"}> \n            <i class=\"fab fa-accessible-icon\"></i>\n            <div className={\"math__div\"}>\n                <NavLink to='/math'>\n                    <span className={\"math__link-span\"}>\n                        <div className={\"math__heading\"}>\n                            Math Game\n                        </div>\n                    </span>\n                </NavLink>\n                <FcCalculator className={\"math__calculator\"}/>\n                <FaDivide className={\"math__divide\"}/>\n                <FcClock className={\"math__equals\"}/>\n            </div>\n            <div className={\"math_trophy\"}>\n                <IconContext.Provider value={{className: \"trophy\"}}>\n                    <ImTrophy/>\n                </IconContext.Provider>   \n            </div> \n            <div className={\"math_scores-div\"}>\n                <div className={\"math_scores-content\"}>\n                    High \n                </div>\n                <div className={\"math_scores-content\"}>\n                    Total\n                </div>\n                <div className={\"math_scores-content\"}>\n                    {user &&\n                    user.math_high || 0} \n                </div>\n                <div className={\"math_scores-content\"}>\n                    {user && \n                    user.math_total || 0} \n                </div>\n            </div>\n            <div className={\"memory__div\"}>\n                <NavLink to='/memory'>\n                    <span className={\"memory__link-span\"}>\n                        <div className={\"memory__heading_one\"}>\n                            Memory\n                        </div>\n                        <div className={\"memory__heading_two\"}>\n                            Game\n                        </div>\n                    </span>\n                </NavLink> \n                <FaEye className={\"memory__eye\"}/>\n                <FcIdea className={\"memory__light\"}/>\n                <FcMindMap className={\"memory__mind\"}/>\n            </div>\n            <div className={\"memory_trophy\"}>\n                <IconContext.Provider value={{className: \"trophy\"}}>\n                    <ImTrophy/>\n                </IconContext.Provider>   \n            </div> \n            <div className={\"memory_scores-div\"}>\n                <div className={\"memory_scores-content\"}>\n                    High \n                </div>\n                <div className={\"memory_scores-content\"}>\n                    Total\n                </div>\n                <div className={\"memory_scores-content\"}>\n                    {user &&\n                    user.memory_high || 0} \n                </div>\n                <div className={\"memory_scores-content\"}>\n                    {user && \n                    user.memory_total || 0} \n                </div>\n            </div>\n            <div className={\"drawing__div\"}>\n                <NavLink to='/drawing'>\n                    <span className={\"drawing__link-span\"}>Drawing</span>\n                </NavLink> \n                <FcPicture className={\"drawing__pic\"}/>\n                <FcFrame className={\"drawing__gallery\"}/>\n            </div>\n            <div className={\"picture__div\"}>\n                {drawing}\n            </div>\n        </div>\n    )\n}\n\nexport default SplashAuth; ","/home/rhys/Brainwhizz/react-whizz/src/components/navigation/NavBar.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/navigation/ProfileButton.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/LoginFormModal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/SignUpModal.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/drawing/Drawing.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/ModalLog.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/auth/ModalSign.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/drawing/Instruction.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/math/Instruction.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/games/memory/Instruction.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/footer/Footer.js",[],"/home/rhys/Brainwhizz/react-whizz/src/components/splash/SplashUnAuth.js",["150","151","152"],"import React, {useState, useEffect, useRef} from 'react';\nimport './SplashUnAuth.css';\nimport koala from \"../../images/koala.jpg\";\nimport kangaroo from \"../../images/kangaroo.jpg\";\n\nconst SplashUnAuth = () => {\n    const message = \"Hi, I'm Bruce the Koala and welcome to Brainwhizz!! Unleash your intelligence right here\";\n    const messageTwo = \"And I'm Damo the Kangaroo. Come in and improve your skills in Math, Memory and Drawing!!\"; \n    const [index, setIndex] = useState(0); \n    const [indexTwo, setIndexTwo] = useState(88)\n    const [next, setNext] = useState(false); \n    const [brain, setBrain] = useState(false); \n    const i = useRef(0); \n    \n    useEffect(() => {\n        if (!message[index]) { \n            setTimeout(() => {\n                setNext(true); \n                document.getElementById(\"talkbubble_one\").style.display = \"none\"; \n            }, 1000); \n            return; \n        };\n\n        setTimeout(() => {\n            const char = document.getElementById(index);\n            char.style.display = \"inline\";\n            setIndex(index + 1);\n        }, 50);\n    }, [index]);\n\n    useEffect(() => { \n        if (!messageTwo[i.current]) {\n            setTimeout(() => {\n                document.getElementById(\"talkbubble_two\").style.display = \"none\"; \n            }, 1000);\n            setBrain(true); \n            return;\n        } \n\n        if (index >= 87) {\n            document.getElementById(\"talkbubble_two\").style.display = \"inline\"; \n            setTimeout(() => {\n                const char = document.getElementById(indexTwo);\n                char.style.display = \"inline\";\n                setIndexTwo(indexTwo + 1);\n            }, 50);\n    \n            i.current += 1; \n        }\n    }, [next, indexTwo]);\n\n    useEffect(() => {\n        if (brain) {\n            setTimeout(() => {\n                const logo = document.getElementById(\"logo_div\"); \n                logo.style.display = \"inline\"; \n                logo.style.animation = \"zoomUnAuth 2s linear both\"\n            }, 1000)\n        }\n    }, [brain])\n\n    return (\n        <div className={\"page_main\"}>\n            <div className={\"koala_container\"}>\n                <img src={koala} />\n            </div> \n            <div className={\"kangaroo_container\"}>\n                <img src={kangaroo} />\n            </div> \n            <div className={\"talkbubble_one\"} id={\"talkbubble_one\"}>\n                <div className={\"talkbubble_one-text\"}>\n                    {\n                        message.split('').map((char, index) => {\n                            return <span className={\"talkbubble_char\"} key={index} id={index}>{char}</span>\n                        })\n                    }\n                </div>\n            </div>\n            <div className={\"talkbubble_two\"} id={\"talkbubble_two\"}>\n                <div className={\"talkbubble_two-text\"}>\n                    {\n                        messageTwo.split('').map((char, index) => {\n                            return <span className={\"talkbubble_char\"} key={index} id={88 + index}>{char}</span>\n                        })\n                    }\n                </div>\n            </div>\n            <div className={\"logo_div\"} id={\"logo_div\"}>\n                    <div className={\"logo_text\"}>\n                        Brainwhizz\n                    </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SplashUnAuth; ",{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":122,"column":9,"nodeType":"159","messageId":"160","endLine":123,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":39,"column":22,"nodeType":"163","messageId":"164","endLine":39,"endColumn":26},{"ruleId":"165","severity":1,"message":"166","line":130,"column":8,"nodeType":"167","endLine":130,"endColumn":14,"suggestions":"168"},{"ruleId":"169","severity":1,"message":"170","line":202,"column":50,"nodeType":"171","messageId":"172","endLine":202,"endColumn":52},{"ruleId":"169","severity":1,"message":"170","line":215,"column":50,"nodeType":"171","messageId":"172","endLine":215,"endColumn":52},{"ruleId":"165","severity":1,"message":"173","line":68,"column":8,"nodeType":"167","endLine":68,"endColumn":16,"suggestions":"174"},{"ruleId":"165","severity":1,"message":"175","line":82,"column":8,"nodeType":"167","endLine":82,"endColumn":14,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":213,"column":17,"nodeType":"179","endLine":213,"endColumn":68},{"ruleId":"165","severity":1,"message":"180","line":70,"column":8,"nodeType":"167","endLine":70,"endColumn":17,"suggestions":"181"},{"ruleId":"165","severity":1,"message":"182","line":11,"column":8,"nodeType":"167","endLine":11,"endColumn":17,"suggestions":"183"},{"ruleId":"177","severity":1,"message":"178","line":19,"column":21,"nodeType":"179","endLine":19,"endColumn":48},{"ruleId":"184","severity":1,"message":"185","line":60,"column":27,"nodeType":"186","messageId":"187","endLine":60,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":61,"column":36,"nodeType":"186","messageId":"187","endLine":61,"endColumn":38},{"ruleId":"184","severity":1,"message":"185","line":64,"column":27,"nodeType":"186","messageId":"187","endLine":64,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":65,"column":37,"nodeType":"186","messageId":"187","endLine":65,"endColumn":39},{"ruleId":"184","severity":1,"message":"185","line":96,"column":27,"nodeType":"186","messageId":"187","endLine":96,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":97,"column":38,"nodeType":"186","messageId":"187","endLine":97,"endColumn":40},{"ruleId":"184","severity":1,"message":"185","line":100,"column":27,"nodeType":"186","messageId":"187","endLine":100,"endColumn":29},{"ruleId":"184","severity":1,"message":"185","line":101,"column":39,"nodeType":"186","messageId":"187","endLine":101,"endColumn":41},{"ruleId":"165","severity":1,"message":"188","line":50,"column":8,"nodeType":"167","endLine":50,"endColumn":24,"suggestions":"189"},{"ruleId":"177","severity":1,"message":"178","line":65,"column":17,"nodeType":"179","endLine":65,"endColumn":36},{"ruleId":"177","severity":1,"message":"178","line":68,"column":17,"nodeType":"179","endLine":68,"endColumn":39},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-eval","eval can be harmful.","CallExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.email'. Either include it or remove the dependency array.","ArrayExpression",["192"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'keyFrame'. Either include it or remove the dependency array.",["193"],"React Hook useEffect has a missing dependency: 'colors.length'. Either include it or remove the dependency array.",["194"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'setCircleDasharray', 'setCounter', and 'setTime'. Either include them or remove the dependency array. If 'setTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["195"],"React Hook useEffect has missing dependencies: 'setCounter' and 'setTime'. Either include them or remove the dependency array. If 'setTime' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["196"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","React Hook useEffect has a missing dependency: 'index'. Either include it or remove the dependency array.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [time, user.email]",{"range":"210","text":"211"},"Update the dependencies array to be: [colors, keyFrame]",{"range":"212","text":"213"},"Update the dependencies array to be: [colors.length, time]",{"range":"214","text":"215"},"Update the dependencies array to be: [counter, setCircleDasharray, setCounter, setTime]",{"range":"216","text":"217"},"Update the dependencies array to be: [counter, setCounter, setTime]",{"range":"218","text":"219"},"Update the dependencies array to be: [next, indexTwo, index]",{"range":"220","text":"221"},[4699,4705],"[time, user.email]",[2548,2556],"[colors, keyFrame]",[3143,3149],"[colors.length, time]",[2016,2025],"[counter, setCircleDasharray, setCounter, setTime]",[399,408],"[counter, setCounter, setTime]",[1729,1745],"[next, indexTwo, index]"]